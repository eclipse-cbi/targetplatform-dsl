/*******************************************************************************
 * Copyright (c) 2012-2014 Obeo and others.
 * 
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Mikael Barbero (Obeo) - initial API and implementation
 *     Denis Golovin - Fix version qualifier parsing problems
 *     Hannes Niederhausen (itemis AG) - added maven related rules
 *******************************************************************************/
grammar org.eclipse.cbi.targetplatform.TargetPlatform with org.eclipse.xtext.common.Terminals

import "org.eclipse.cbi.targetplatform.model"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
											
TargetPlatform:
	(
		'target' name=STRING
		contents+=TargetContent*
	)?
;

TargetContent: 
	Options | Environment | IncludeDeclaration | Location | MavenLocation
;

Options: 
	'with' options+=Option (','? options+=Option)*
;

Environment:
	{Environment}
	'environment' env+=ID (','? env+=ID)*
;

IncludeDeclaration:
	'include' importURI=STRING
;

Location:
	'location' ((ID=ID)? & uri=STRING) ('{'
		('with' options+=Option (','? options+=Option)*)?
		ius+=IU*
	'}')?
;

MavenLocation:
	'maven' label=ID 
	'scope' '=' scopes+=MavenScope (',' scopes+=MavenScope)* 'dependencyDepth' '=' dependencyDepth=MavenDependencyDepth
	'missingManifest' '=' missingManifest=MavenMissingManifest
	(includeSources?='includeSources')?
	'{'
		(generatedFeature=GeneratedFeature)?
		(dependencies+=MavenDependency)+
		(repositories+=MavenRepository)*
	'}'
;

GeneratedFeature:
	'feature' '{'
		'id' '=' id=STRING
		'name' '=' name=STRING
		'version' '=' version=STRING
		('vendor' '=' vendor=STRING)?
		('installLibrary' '=' instalLibrary=STRING)?
		
		('additionalBundles' '{'
		(additionalBundles+=IU)+
		'}')?
	'}'
;

MavenDependency:
	'dependency' '{'
		'groupId' '=' groupId=STRING
		'artifactId' '=' artifactId=STRING
		'version' '=' version=STRING
		('classifier' '=' classifier=STRING)?
		('type' '=' type=STRING)?
	'}'
;

MavenRepository:
	'repository' 'id' '=' id=STRING 'url' '=' url=STRING
;



enum Option:
	INCLUDE_REQUIRED |
	INCLUDE_ALL_ENVIRONMENTS |
	INCLUDE_SOURCE |
	INCLUDE_CONFIGURE_PHASE
;

enum MavenScope:
	COMPILE |
	PROVIDED |
	RUNTIME |
	TEST |
	SYSTEM |
	IMPORT
;

enum MavenMissingManifest:
	GENERATE |
	ERROR |
	IGNORE
;

enum MavenDependencyDepth:
	NONE |
	DIRECT |
	INFINITE
;


IU:
	ID=ID ( (';' 'version' '=')? (version=VersionRange|version=STRING) )? 
;

Version hidden():
	INT ('.' INT ('.' INT ('.' (ID|INT|QUALIFIER))?)?)?
;

VersionRange hidden (WS):
	( ('('|'[') Version ',' Version (')'|']') ) | Version | 'lazy'
;

@Override 
terminal INT returns ecore::EInt: ('0'..'9')+;
@Override 
terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('.'? ('a'..'z'|'A'..'Z'|'^'|'_'|'-'|'0'..'9'))*;
terminal QUALIFIER: ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;
